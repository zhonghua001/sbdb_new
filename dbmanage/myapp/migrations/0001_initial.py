# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-01-11 12:50
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Db_account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=30)),
                ('passwd', models.CharField(max_length=255)),
                ('db_account_role', models.CharField(choices=[('read', 'read'), ('write', 'write'), ('read_write', 'read_write'), ('admin', 'admin'), ('all', 'all')], default='all', max_length=30)),
                ('tags', models.CharField(db_index=True, max_length=80)),
                ('create_user', models.CharField(max_length=50, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_user', models.CharField(max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Db_database_permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('read', 'read'), ('write', 'write'), ('read_write', 'read_write'), ('admin', 'admin'), ('all', 'all')], default='read', max_length=20)),
                ('create_user', models.CharField(max_length=50, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_user', models.CharField(max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Db_database_permission_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_detail', models.CharField(max_length=500, null=True)),
                ('black_table', models.CharField(max_length=500, null=True)),
                ('create_user', models.CharField(max_length=50, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_user', models.CharField(max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Db_database_permission')),
            ],
        ),
        migrations.CreateModel(
            name='Db_group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupname', models.CharField(max_length=30, unique=True)),
                ('account', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Db_instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=30)),
                ('port', models.CharField(max_length=10)),
                ('db_type', models.CharField(default='mysql', max_length=30)),
                ('comments', models.CharField(max_length=100, null=True)),
                ('status', models.CharField(choices=[('Idle', 'Idle'), ('InUse', 'InUse')], max_length=20)),
                ('create_user', models.CharField(max_length=50, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_user', models.CharField(max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('admin_user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Db_name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dbtag', models.CharField(max_length=80)),
                ('dbname', models.CharField(max_length=30)),
                ('create_user', models.CharField(max_length=50, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_user', models.CharField(max_length=50, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('dbaccount', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Db_account')),
            ],
        ),
        migrations.CreateModel(
            name='Incep_error_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.IntegerField(default=0, null=True)),
                ('myid', models.IntegerField()),
                ('stage', models.CharField(max_length=20)),
                ('errlevel', models.IntegerField()),
                ('stagestatus', models.CharField(max_length=40)),
                ('errormessage', models.TextField()),
                ('sqltext', models.TextField()),
                ('affectrow', models.IntegerField()),
                ('sequence', models.CharField(db_index=True, max_length=30)),
                ('backup_db', models.CharField(max_length=100)),
                ('execute_time', models.CharField(max_length=20)),
                ('sqlsha', models.CharField(max_length=50)),
                ('create_time', models.DateTimeField(db_index=True)),
                ('finish_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Instance_account_admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('db_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Db_account')),
            ],
        ),
        migrations.CreateModel(
            name='Login_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=35)),
                ('ipaddr', models.CharField(max_length=35)),
                ('action', models.CharField(max_length=20)),
                ('create_time', models.DateTimeField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='MySQL_monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=20)),
                ('monitor', models.SmallIntegerField(default=1)),
                ('check_longsql', models.SmallIntegerField(default=0)),
                ('longsql_time', models.SmallIntegerField(default=1200)),
                ('longsql_autokill', models.SmallIntegerField(default=0)),
                ('check_active', models.SmallIntegerField(default=0)),
                ('active_threshold', models.SmallIntegerField(default=30)),
                ('check_connections', models.SmallIntegerField(default=0)),
                ('connection_threshold', models.IntegerField(default=1000)),
                ('check_delay', models.SmallIntegerField(default=0)),
                ('delay_threshold', models.IntegerField(default=3600)),
                ('check_subordinate', models.SmallIntegerField(default=0)),
                ('replchannel', models.CharField(default='0', max_length=30)),
                ('alarm_times', models.SmallIntegerField(default=3)),
                ('alarm_interval', models.SmallIntegerField(default=60)),
                ('mail_to', models.CharField(max_length=255)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Db_account')),
                ('instance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myapp.Db_instance')),
            ],
            options={
                'db_table': 'mysql_monitor',
            },
        ),
        migrations.CreateModel(
            name='Oper_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=35)),
                ('ipaddr', models.CharField(max_length=35)),
                ('dbtag', models.CharField(max_length=35)),
                ('dbname', models.CharField(max_length=300)),
                ('sqltext', models.TextField()),
                ('sqltype', models.CharField(max_length=20)),
                ('create_time', models.DateTimeField(db_index=True)),
                ('login_time', models.DateTimeField()),
                ('group_id', models.IntegerField()),
                ('host_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=35)),
                ('instance', models.CharField(max_length=100)),
                ('db_account_role', models.CharField(max_length=15)),
                ('dbtag', models.CharField(max_length=35)),
                ('sqltext', models.TextField()),
                ('create_time', models.DateTimeField(db_index=True)),
                ('update_time', models.DateTimeField()),
                ('status', models.CharField(db_index=True, max_length=20)),
                ('sqlsha', models.TextField()),
                ('sche_time', models.DateTimeField(db_index=True, null=True)),
                ('specification', models.CharField(default='', max_length=100)),
                ('operator', models.CharField(default='', max_length=35)),
                ('backup_status', models.SmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=40)),
                ('filename', models.FileField(upload_to='upload_sql')),
            ],
        ),
        migrations.CreateModel(
            name='User_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('select_limit', models.IntegerField(default=200)),
                ('export_limit', models.IntegerField(default=200)),
                ('task_email', models.IntegerField(db_index=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_mysql_query', 'can see mysql_query view'), ('can_log_query', 'can see log_query view'), ('can_see_execview', 'can see mysql exec view'), ('can_see_inception', 'can see inception view'), ('can_see_metadata', 'can see meta_data view'), ('can_see_mysqladmin', 'can see mysql_admin view'), ('can_export', 'can export csv'), ('can_insert_mysql', 'can insert mysql'), ('can_update_mysql', 'can update mysql'), ('can_delete_mysql', 'can delete mysql'), ('can_create_mysql', 'can create mysql'), ('can_drop_mysql', 'can drop mysql'), ('can_truncate_mysql', 'can truncate mysql'), ('can_alter_mysql', 'can alter mysql'), ('can_query_mongo', 'can query mongo'), ('can_see_taskview', 'can see task view'), ('can_admin_task', 'can admin task'), ('can_delete_task', 'can delete task'), ('can_update_task', 'can update task'), ('can_query_pri', 'can query pri'), ('can_set_pri', 'can set pri'), ('can_oper_saltapi', 'can oper saltapi')),
            },
        ),
        migrations.AlterIndexTogether(
            name='oper_log',
            index_together=set([('dbtag', 'sqltype', 'create_time')]),
        ),
        migrations.AddField(
            model_name='db_group',
            name='dbname',
            field=models.ManyToManyField(to='myapp.Db_name'),
        ),
        migrations.AddField(
            model_name='db_database_permission',
            name='db_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Db_name'),
        ),
        migrations.AddField(
            model_name='db_account',
            name='instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Db_instance'),
        ),
        migrations.AlterUniqueTogether(
            name='db_instance',
            unique_together=set([('ip', 'port')]),
        ),
        migrations.AlterUniqueTogether(
            name='db_account',
            unique_together=set([('instance', 'db_account_role')]),
        ),
    ]
